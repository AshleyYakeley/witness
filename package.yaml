name: witness
version: "0.6"
author: Ashley Yakeley
copyright: (c) 2017-2022 Ashley Yakeley
license: BSD-2-Clause
license-file: LICENSE
maintainer: <ashley@semantic.org>
homepage: https://github.com/AshleyYakeley/witness
bug-reports: https://github.com/AshleyYakeley/witness/issues
synopsis: values that witness types
description:
    A /witness/ is a value that witnesses some sort of constraint on some list of type variables.
    This library provides support for a wide variety of witness types.
    It also provides classes for /representatives/, which are values that represent types.
category: Data
build-type: Simple

extra-source-files:
  - changelog.md

library:
    source-dirs: src
    default-extensions:
      - AllowAmbiguousTypes
      - Arrows
      - ConstraintKinds
      - DataKinds
      - DefaultSignatures
      - EmptyCase
      - EmptyDataDecls
      - ExistentialQuantification
      - FlexibleContexts
      - FlexibleInstances
      - ForeignFunctionInterface
      - FunctionalDependencies
      - GADTs
      - GeneralizedNewtypeDeriving
      - ImplicitParams
      - NoImplicitPrelude
      - InstanceSigs
      - KindSignatures
      - LambdaCase
      - MultiParamTypeClasses
      - OverloadedLabels
      - OverloadedStrings
      - PartialTypeSignatures
      - PatternGuards
      - PatternSynonyms
      - PolyKinds
      - QuantifiedConstraints
      - RankNTypes
      - RecordWildCards
      - RecursiveDo
      - ScopedTypeVariables
      - StandaloneDeriving
      - StandaloneKindSignatures
      - NoStarIsType
      - TemplateHaskell
      - TypeApplications
      - TypeFamilies
      - TypeFamilyDependencies
      - TypeInType
      - TypeOperators
      - TypeSynonymInstances
      - UndecidableInstances
      - UndecidableSuperClasses
      - ViewPatterns
    ghc-options:
      - -Wall
      - -Wincomplete-uni-patterns
      - -Wincomplete-record-updates
      - -Wcompat
      - -Wnoncanonical-monad-instances
    dependencies:
      - base >= 4.15 && < 5
      - constraints >= 0.13
      - countable >= 1.2
    exposed-modules:
      - Data.Type.Apply
      - Data.Type.Heterogeneous
      - Data.PeanoNat
      - Data.Witness.Specific.Some
      - Data.Witness.Specific.All
      - Data.Witness.General.Constraint
      - Data.Witness.General.WitnessValue
      - Data.Witness.Specific.Symbol
      - Data.Witness.General.Finite
      - Data.Witness.Specific.Single
      - Data.Witness.Specific.Pair
      - Data.Witness.Specific.Cons
      - Data.Witness.Specific.Either
      - Data.Witness.Specific.Submap
      - Data.Witness.Specific.WitnessOfDict
      - Data.Witness.Specific.WitnessForDict
      - Data.Witness.Specific.PeanoNat
      - Data.Witness.Specific.Natural
      - Data.Witness.Specific.List.Element
      - Data.Witness.Specific.List.List
      - Data.Witness.Specific.Concat
      - Data.Witness.Specific.ApplyStack
      - Data.Witness.Specific.List.Product
      - Data.Witness.Specific.List.Sum
      - Data.Witness.General.Representative
      - Data.Witness.Specific.Saturate
      - Data.Witness
    other-modules:
      - Import
